{"version":3,"sources":["_components/Controls.jsx","_components/Statistics.jsx","_components/Section.jsx","_components/Notification.jsx","App.js","index.js"],"names":["Controls","options","leaveFeedback","className","Object","keys","map","key","type","id","onClick","e","slice","toUpperCase","toLowerCase","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","Notification","propTypes","message","PropTypes","string","isRequired","Notfication","App","state","handlerFeedback","setState","prevState","btnId","target","feedbackCounter","values","reduce","acc","value","positivePercentageCounter","Math","round","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPA0BeA,EAtBE,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,cAC3B,OACE,qBAAKC,UAAU,WAAf,SACGC,OAAOC,KAAKJ,GAASK,KAAI,SAAAC,GAAG,OAC3B,wBAEEC,KAAK,SACLC,GAAIF,EACJG,QAAS,SAAAC,GAAC,OAAIT,EAAcS,IAJ9B,SAMGJ,EAAIK,MAAM,EAAG,GAAGC,cAAgBN,EAAIK,MAAM,GAAGE,eALzCP,SCcAQ,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,+BACE,qBAAIjB,UAAU,QAAd,mBAA4B,+BAAOa,OACnC,qBAAIb,UAAU,QAAd,sBAA+B,+BAAOc,OACtC,qBAAId,UAAU,QAAd,kBAA2B,+BAAOe,OAClC,qBAAIf,UAAU,QAAd,oBAA6B,+BAAOgB,OACpC,qBAAIhB,UAAU,QAAd,gCAAyC,iCAAOiB,EAAP,cCKhCC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,M,gBCAPC,aAAaC,UAAY,CACvBC,QAASC,IAAUC,OAAOC,YAGbC,MARK,SAAC,GAAiB,IAAfJ,EAAc,EAAdA,QACrB,OAAO,4BAAIA,KC2DEK,G,kNApDbC,MAAQ,CACNhB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPe,gBAAkB,SAACtB,GACjB,EAAKuB,UAAS,SAAAC,GACZ,IAAMC,EAAQzB,EAAE0B,OAAO5B,GACvB,OAAO,eAAG2B,EAAQD,EAAUC,GAAS,O,EAIzCE,gBAAkB,kBAChBlC,OAAOmC,OAAO,EAAKP,OAAOQ,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,I,EAEhEC,0BAA4B,WAC1B,OAAOC,KAAKC,MAAO,IAAM,EAAKP,kBAAqB,EAAKN,MAAMhB,O,4CAIhE,WAAU,IAAD,EACwB8B,KAAKd,MAA5BhB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQ2B,KAAKR,kBAEnB,OACE,sBAAKnC,UAAU,YAAf,UAEE,cAAC,EAAD,CAASmB,MAAM,wBAAf,SACE,cAAC,EAAD,CACErB,QAAS6C,KAAKd,MACd9B,cAAe4C,KAAKb,oBAIxB,eAAC,EAAD,CAASX,MAAM,YAAf,UACa,IAAVH,GAAe,cAAC,EAAD,CAAcO,QAAQ,sBACrCP,EAAQ,GACP,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoB0B,KAAKH,wC,GA7CrBI,IAAMC,Y,MCHxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.310b87c6.chunk.js","sourcesContent":["\nimport PropTypes from 'prop-types';\n\n\nconst Controls = ({ options, leaveFeedback }) => {\n  return (\n    <div className='controls'>\n      {Object.keys(options).map(key => (\n        <button\n          key={key}\n          type=\"button\"\n          id={key}\n          onClick={e => leaveFeedback(e)}\n        >\n          {key.slice(0, 1).toUpperCase() + key.slice(1).toLowerCase()}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nControls.propTypes = {\n  options: PropTypes.object.isRequired,\n  leaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default Controls;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <ul>\n      <li className='value'>Good: <span>{good}</span></li>\n      <li className='value'>Neutral: <span>{neutral}</span></li>\n      <li className='value'>Bad: <span>{bad}</span></li>\n      <li className='value'>Total: <span>{total}</span></li>\n      <li className='value'>Positive feedback: <span>{positivePercentage}%</span></li>\n    </ul>  \n  )\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;","import PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h1>{title}</h1>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;","import PropTypes from 'prop-types';\n\nconst Notfication = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notfication;","import React from 'react';\nimport Controls from './_components/Controls';\nimport Statistics from \"./_components/Statistics\";\nimport Section from \"./_components/Section\";\nimport Notification from \"./_components/Notification\";\nimport './styles.css';\n\n\nclass App extends React.Component {\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  }\n\n  handlerFeedback = (e) => {\n    this.setState(prevState => {\n      const btnId = e.target.id;\n      return { [btnId]: prevState[btnId] + 1 };\n    })\n  }\n\n  feedbackCounter = () =>\n    Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  \n  positivePercentageCounter = () => {\n    return Math.round((100 / this.feedbackCounter()) * this.state.good);\n  };\n\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.feedbackCounter();;\n\n    return (\n      <div className='Container'>\n        \n        <Section title=\"Please leave feedback\">\n          <Controls\n            options={this.state}\n            leaveFeedback={this.handlerFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistic\">\n          {total === 0 && <Notification message=\"No feedback given\" />}\n          {total > 0 && (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={this.positivePercentageCounter()}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}