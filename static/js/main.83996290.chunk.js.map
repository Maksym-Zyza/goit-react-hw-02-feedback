{"version":3,"sources":["_components/Controls.jsx","App.js","index.js"],"names":["Controls","options","leaveFeedback","className","Object","keys","map","key","type","id","onClick","e","slice","toUpperCase","toLowerCase","App","state","good","neutral","bad","handlerFeedback","setState","prevState","btnId","target","feedbackCounter","values","reduce","acc","value","positivePercentageCounter","Math","round","this","total","positivePercentage","React","Component","defauitProps","typePrors","PropTypes","number","isRequired","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQA0BeA,EAtBE,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,cAC3B,OACE,qBAAKC,UAAU,WAAf,SACGC,OAAOC,KAAKJ,GAASK,KAAI,SAAAC,GAAG,OAC3B,wBAEEC,KAAK,SACLC,GAAIF,EACJG,QAAS,SAAAC,GAAC,OAAIT,EAAcS,IAJ9B,SAMGJ,EAAIK,MAAM,EAAG,GAAGC,cAAgBN,EAAIK,MAAM,GAAGE,eALzCP,SCHTQ,G,kNAcJC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,gBAAkB,SAACT,GACjB,EAAKU,UAAS,SAAAC,GACZ,IAAMC,EAAQZ,EAAEa,OAAOf,GACvB,OAAO,eAAGc,EAAQD,EAAUC,GAAS,O,EAIzCE,gBAAkB,kBAChBrB,OAAOsB,OAAO,EAAKV,OAAOW,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,I,EAEhEC,0BAA4B,WAC1B,OAAOC,KAAKC,MAAO,IAAM,EAAKP,kBAAqB,EAAKT,MAAMC,O,4CAIhE,WAAU,IAAD,EACwBgB,KAAKjB,MAA5BC,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBe,EAAQD,KAAKR,kBACbU,EAAqBF,KAAKH,4BAEhC,OACE,sBAAK3B,UAAW,YAAhB,UACE,uDACA,cAAC,EAAD,CACEF,QAASgC,KAAKjB,MACdd,cAAe+B,KAAKb,kBAGtB,4CACW,IAAVc,GAAe,kDACfA,EAAQ,GACT,+BACE,qBAAI/B,UAAU,QAAd,mBAA4B,+BAAOc,OACnC,qBAAId,UAAU,QAAd,sBAA+B,+BAAOe,OACtC,qBAAIf,UAAU,QAAd,kBAA2B,+BAAOgB,OAClC,qBAAIhB,UAAU,QAAd,oBAA6B,+BAAO+B,OACpC,qBAAI/B,UAAU,QAAd,gCAAyC,iCAAOgC,EAAP,oB,GAxDjCC,IAAMC,YAAlBtB,EAEGuB,aAAe,CACpBrB,KAAM,EACNC,QAAS,EACTC,IAAK,GALHJ,EAQGwB,UAAY,CACjBtB,KAAMuB,IAAUC,OAAOC,WACvBxB,QAASsB,IAAUC,OAAOC,WAC1BvB,IAAKqB,IAAUC,OAAOC,YAqDX3B,Q,MCjEf4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.83996290.chunk.js","sourcesContent":["\nimport PropTypes from 'prop-types';\n\n\nconst Controls = ({ options, leaveFeedback }) => {\n  return (\n    <div className='controls'>\n      {Object.keys(options).map(key => (\n        <button\n          key={key}\n          type=\"button\"\n          id={key}\n          onClick={e => leaveFeedback(e)}\n        >\n          {key.slice(0, 1).toUpperCase() + key.slice(1).toLowerCase()}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nControls.propTypes = {\n  options: PropTypes.object.isRequired,\n  leaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default Controls;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Controls from './_components/Controls';\nimport './styles.css';\n\n\nclass App extends React.Component {\n  \n  static defauitProps = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  }\n\n  static typePrors = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n  }\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  }\n\n  handlerFeedback = (e) => {\n    this.setState(prevState => {\n      const btnId = e.target.id;\n      return { [btnId]: prevState[btnId] + 1 };\n     })\n  }\n\n  feedbackCounter = () =>\n    Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  \n  positivePercentageCounter = () => {\n    return Math.round((100 / this.feedbackCounter()) * this.state.good);\n  };\n\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.feedbackCounter();\n    const positivePercentage = this.positivePercentageCounter();\n\n    return (\n      <div className={'Container'}>\n        <h1>Please leave feedback</h1>  \n        <Controls\n          options={this.state}\n          leaveFeedback={this.handlerFeedback}\n        />\n\n        <h2>Statistics</h2>\n        {total === 0 && <p>No feedback given</p>}\n        {total > 0 && (\n        <ul>\n          <li className='value'>Good: <span>{good}</span></li>\n          <li className='value'>Neutral: <span>{neutral}</span></li>\n          <li className='value'>Bad: <span>{bad}</span></li>\n          <li className='value'>Total: <span>{total}</span></li>\n          <li className='value'>Positive feedback: <span>{positivePercentage}%</span></li>\n        </ul>\n        )}\n      </div>\n  );\n   }\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}